{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/tech47/todo-app/todo-react/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/tech47/todo-app/todo-react/src/components/Home.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation($id: ID!, $completed: Boolean!) {\\n    updatetodo(where: { id: $id }, data: { completed: $completed }) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation($id: ID!) {\\n    deletetodo( id: $id ) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query {\\n    todoes {\\n      id\\n      description\\n      completed\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport gql from 'graphql-tag';\nconst TodoQuery = gql(_templateObject());\nconst DeleteTodo = gql(_templateObject2());\nconst UpdateTodo = gql(_templateObject3());\nexport const TodoHeader = () => {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Todo list\");\n};\nexport const Landing = () => {\n  const handleDelete = async (deletetodo, id) => {\n    await deletetodo({\n      variables: {\n        id\n      },\n      refetchQueries: [{\n        query: TodoQuery\n      }]\n    });\n  };\n\n  const handleDone = async (updatetodo, id) => {\n    await updatetodo({\n      variables: {\n        id,\n        completed: true\n      },\n      refetchQueries: [{\n        query: TodoQuery\n      }]\n    });\n  };\n\n  return React.createElement(Mutation, {\n    mutation: UpdateTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, updatetodo => React.createElement(Mutation, {\n    mutation: DeleteTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, deletetodo => React.createElement(Query, {\n    query: TodoQuery,\n    fetchPolicy: 'network-only',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Fetching\");\n    if (error) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Error\");\n    return React.createElement(\"div\", {\n      style: {\n        margin: '32px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(TodoHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"\\uFF0B\"), \" Create a new note\")), data.todoes.map((todo, id) => {\n      return React.createElement(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr 1fr'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          textDecoration: todo.completed ? 'line-through' : ''\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, todo.description), React.createElement(\"button\", {\n        style: {\n          width: '100px'\n        },\n        onClick: e => handleDone(updatetodo, todo.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Done\"), React.createElement(\"button\", {\n        style: {\n          width: '100px'\n        },\n        onClick: e => handleDelete(deletetodo, todo.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Delete\"));\n    }));\n  })));\n};","map":{"version":3,"sources":["/home/tech47/todo-app/todo-react/src/components/Home.js"],"names":["React","Query","Mutation","Link","gql","TodoQuery","DeleteTodo","UpdateTodo","TodoHeader","Landing","handleDelete","deletetodo","id","variables","refetchQueries","query","handleDone","updatetodo","completed","loading","error","data","margin","todoes","map","todo","display","gridTemplateColumns","textDecoration","description","width","e"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,SAAS,GAAGD,GAAH,mBAAf;AAUA,MAAME,UAAU,GAAGF,GAAH,oBAAhB;AAQA,MAAMG,UAAU,GAAGH,GAAH,oBAAhB;AAQA,OAAO,MAAMI,UAAU,GAAG,MAAM;AAC9B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD,CAFM;AAIP,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,QAAMC,YAAY,GAAG,OAAOC,UAAP,EAAmBC,EAAnB,KAA0B;AAC7C,UAAMD,UAAU,CAAC;AACfE,MAAAA,SAAS,EAAE;AAAED,QAAAA;AAAF,OADI;AAEfE,MAAAA,cAAc,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAEV;AAAT,OAAD;AAFD,KAAD,CAAhB;AAID,GALD;;AAOA,QAAMW,UAAU,GAAG,OAAOC,UAAP,EAAmBL,EAAnB,KAA0B;AAC3C,UAAMK,UAAU,CAAC;AACfJ,MAAAA,SAAS,EAAE;AAAED,QAAAA,EAAF;AAAMM,QAAAA,SAAS,EAAE;AAAjB,OADI;AAEfJ,MAAAA,cAAc,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAEV;AAAT,OAAD;AAFD,KAAD,CAAhB;AAID,GALD;;AAOA,SACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,UAAU,IACT,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEX,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,UAAU,IACT,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEN,SAAd;AAAyB,IAAA,WAAW,EAAE,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEc,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAA8B;AAC7B,QAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,QAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAEX,WACE;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,uBADF,CAFF,EAOGD,IAAI,CAACE,MAAL,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOb,EAAP,KAAc;AAC7B,aACE;AACE,QAAA,KAAK,EAAE;AACLc,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,mBAAmB,EAAE;AAFhB,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,cAAc,EAAEH,IAAI,CAACP,SAAL,GACZ,cADY,GAEZ;AAHC,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGO,IAAI,CAACI,WAPR,CANF,EAeE;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SADT;AAEE,QAAA,OAAO,EAAEC,CAAC,IAAIf,UAAU,CAACC,UAAD,EAAaQ,IAAI,CAACb,EAAlB,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,EAqBE;AACE,QAAA,KAAK,EAAE;AAAEkB,UAAAA,KAAK,EAAE;AAAT,SADT;AAEE,QAAA,OAAO,EAAEC,CAAC,IAAIrB,YAAY,CAACC,UAAD,EAAac,IAAI,CAACb,EAAlB,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBF,CADF;AA8BD,KA/BA,CAPH,CADF;AA0CD,GA/CH,CAFJ,CAFJ,CADF;AA2DD,CA1EM","sourcesContent":["import React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport gql from 'graphql-tag';\n\nconst TodoQuery = gql`\n  query {\n    todoes {\n      id\n      description\n      completed\n    }\n  }\n`;\n\nconst DeleteTodo = gql`\n  mutation($id: ID!) {\n    deletetodo( id: $id ) {\n      id\n    }\n  }\n`;\n\nconst UpdateTodo = gql`\n  mutation($id: ID!, $completed: Boolean!) {\n    updatetodo(where: { id: $id }, data: { completed: $completed }) {\n      id\n    }\n  }\n`;\n\nexport const TodoHeader = () => {\n  return <h1>Todo list</h1>;\n};\n\nexport const Landing = () => {\n  const handleDelete = async (deletetodo, id) => {\n    await deletetodo({\n      variables: { id },\n      refetchQueries: [{ query: TodoQuery }]\n    });\n  };\n\n  const handleDone = async (updatetodo, id) => {\n    await updatetodo({\n      variables: { id, completed: true },\n      refetchQueries: [{ query: TodoQuery }]\n    });\n  };\n\n  return (\n    <Mutation mutation={UpdateTodo}>\n      {updatetodo => (\n        <Mutation mutation={DeleteTodo}>\n          {deletetodo => (\n            <Query query={TodoQuery} fetchPolicy={'network-only'}>\n              {({ loading, error, data }) => {\n                if (loading) return <div>Fetching</div>;\n                if (error) return <div>Error</div>;\n\n                return (\n                  <div style={{ margin: '32px' }}>\n                    <TodoHeader />\n                    <Link to=\"/new\">\n                      <h4>\n                        <b>ï¼‹</b> Create a new note\n                      </h4>\n                    </Link>\n                    {data.todoes.map((todo, id) => {\n                      return (\n                        <div\n                          style={{\n                            display: 'grid',\n                            gridTemplateColumns: '1fr 1fr 1fr'\n                          }}\n                        >\n                          <span\n                            style={{\n                              textDecoration: todo.completed\n                                ? 'line-through'\n                                : ''\n                            }}\n                          >\n                            {todo.description}\n                          </span>\n                          <button\n                            style={{ width: '100px' }}\n                            onClick={e => handleDone(updatetodo, todo.id)}\n                          >\n                            Done\n                          </button>\n                          <button\n                            style={{ width: '100px' }}\n                            onClick={e => handleDelete(deletetodo, todo.id)}\n                          >\n                            Delete\n                          </button>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              }}\n            </Query>\n          )}\n        </Mutation>\n      )}\n    </Mutation>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}